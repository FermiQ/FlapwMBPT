      subroutine start_par_solid
      use atom_mod
      use manager_mod
      use parallel_mod
      use solid_mod
      use vertex_mod
      implicit none
      integer :: npr
      allocate(ndim_k(nproc))
      allocate(n_mpi_k(nproc))
      allocate(ndim_kk(nproc))
      allocate(n_mpi_kk(nproc))
      allocate(ndim3_k(nproc_k))
      allocate(ndim3_kk(nproc_k))
      allocate(n3_mpi_k(nproc_k))
      allocate(n3_mpi_kk(nproc_k))
      allocate(ndim3_kkt(nproc_t))
      allocate(n3_mpi_kkt(nproc_t))
      allocate(ndim_k_red(nproc_k))
      allocate(n_mpi_k_red(nproc_k))
      allocate(ndimc_kk(nproc_k))
      allocate(nc_mpi_kk(nproc_k))
c ---- Memory distribution for K-points ----------------------------
      call size_shift_par(npnt,nproc,ndim_k,n_mpi_k)
      call size_shift_par(npnt,nproc_k,ndim3_k,n3_mpi_k)
      if(mesh_k_c) call size_shift_par(npnt_c,nproc_k,ndim_k_red,
     &                                 n_mpi_k_red)
      call size_shift_par(nqdiv_c,nproc_k,ndimc_kk,nc_mpi_kk)
c ---- Memory distribution for K_All-points ----------------------------
      call size_shift_par(nqdiv,nproc,ndim_kk,n_mpi_kk)
      call size_shift_par(nqdiv,nproc_k,ndim3_kk,n3_mpi_kk)
      call size_shift_par(nqdiv,nproc_t,ndim3_kkt,n3_mpi_kkt)
      allocate(ndim3_nr_red(nproc_k))
      allocate(n3_mpi_nr_red(nproc_k))
      call size_shift_par(nr_red,nproc_k,ndim3_nr_red,n3_mpi_nr_red)
      allocate(ndimt_nr_red(nproc_t))
      allocate(nt_mpi_nr_red(nproc_t))
      call size_shift_par(nr_red,nproc_t,ndimt_nr_red,nt_mpi_nr_red)
      allocate(ndimt_nr(nproc_t))
      allocate(nt_mpi_nr(nproc_t))
      call size_shift_par(nr_full,nproc_t,ndimt_nr,nt_mpi_nr)
      allocate(nd_k_nr_full(nproc_k))
      allocate(n0_k_nr_full(nproc_k))
      call size_shift_par(nr_full,nproc_k,nd_k_nr_full,n0_k_nr_full)
      npr=nproc_k*nproc_b
      allocate(ndim4_nr_red(npr))
      allocate(n4_mpi_nr_red(npr))
      call size_shift_par(nr_red,npr,ndim4_nr_red,n4_mpi_nr_red)
      allocate(ndima_nr_red(nproc))
      allocate(na_mpi_nr_red(nproc))
      call size_shift_par(nr_red,nproc,ndima_nr_red,na_mpi_nr_red)
      npr=nproc_t*nproc_b
      allocate(ndim_tb_nr_red(npr))
      allocate(nmpi_tb_nr_red(npr))
      call size_shift_par(nr_red,npr,ndim_tb_nr_red,nmpi_tb_nr_red)
      allocate(nd_tb_ij(npr))
      allocate(n0_tb_ij(npr))
      call size_shift_par(nbndf*(nbndf+1)/2,npr,nd_tb_ij,n0_tb_ij)
      allocate(ndim_b_nr_red(nproc_b))
      allocate(nmpi_b_nr_red(nproc_b))
      call size_shift_par(nr_red,nproc_b,ndim_b_nr_red,nmpi_b_nr_red)
      allocate(ndim_tb_nfun(npr))
      allocate(nmpi_tb_nfun(npr))
      call size_shift_par(nfun,npr,ndim_tb_nfun,nmpi_tb_nfun)
      allocate(ndim_b_nfun(nproc_b))
      allocate(nmpi_b_nfun(nproc_b))
      call size_shift_par(nfun,nproc_b,ndim_b_nfun,nmpi_b_nfun)
      allocate(nd_b_pbint(nproc_b))
      allocate(n0_b_pbint(nproc_b))
      call size_shift_par(nplw_gw*(nplw_gw+1)/2,nproc_b,nd_b_pbint,
     &                    n0_b_pbint)
c ------------------------------------------------------------------
      allocate(ndim_nfun(nproc_k))
      allocate(n_mpi_nfun(nproc_k))
      call size_shift_par(nfun,nproc_k,ndim_nfun,n_mpi_nfun)
      allocate(ndim_nrr(nproc_k))
      allocate(n_mpi_nrr(nproc_k))
      call size_shift_par(nrr_max,nproc_k,ndim_nrr,n_mpi_nrr)
      allocate(ndim_nrr_c(nproc_k))
      allocate(n_mpi_nrr_c(nproc_k))
      call size_shift_par(nrr_max_c,nproc_k,ndim_nrr_c,n_mpi_nrr_c)
      allocate(ndim4_pbr(nproc_b,npnt_c))
      allocate(n4_mpi_pbr(nproc_b,npnt_c))
      allocate(ndim4_pbr_mt(nproc_b))
      allocate(n4_mpi_pbr_mt(nproc_b))
      allocate(ndim4_bnd(nproc_b,npnt,nspin_0))
      allocate(n4_mpi_bnd(nproc_b,npnt,nspin_0))
      allocate(ndim_pbmt(nproc_b))
      allocate(n_mpi_pbmt(nproc_b))
      end
