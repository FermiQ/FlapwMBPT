      subroutine forces_rel_bnd(rel,rel1,gb,pnt_,nbas,indg)
	use manager_mod
	use solid_mod
	use units_mod
      implicit none
      integer, intent(in) :: nbas,indg(nbas/nrel)
      real*8, intent(in) :: gb(3,nbas/nrel),pnt_(3)
      complex*16, intent(out) :: rel(nbas,nbas),rel1(nbas,nbas)
	integer :: jgb,jgb0,igb,igb0,ia,ib,ic,ind,jp,jh,ipp,ih,nbndt
      real*8 :: cr(3),gki(3),gkj(3),pi2a,c1,gj,gi,c05,c2,g2j,enj,c2j,
     &          anormj,g2i,eni,c2i,anormi,const,const1,const2,scal,ann,
     &          amult,pr,pii,rel0r,rel0i,relr,reli,enij,xr0,xi0,pi2,
     &          ddot
      pi2=2.d0*pi
      pi2a=pi2/par
      c1=amegaint/amega
	nbndt=nbas/nrel
      c05=0.5d0*clight
      c2=clight*clight
      do jgb=1,nbndt
        jgb0=indg(jgb)
        gkj=pi2a*(pnt_+gb(:,jgb))
        g2j=dot_product(gkj,gkj)
        gj=sqrt(g2j)
        enj=c05*(sqrt(c2+4.d0*g2j)-clight)
        c2j=c2+enj
        anormj=c2j/dsqrt(c2j*c2j+c2*g2j)
        do igb=1,nbndt
          gki=pi2a*(pnt_+gb(:,igb))
          g2i=dot_product(gki,gki)
          gi=sqrt(g2i)
          eni=c05*(sqrt(c2+4.d0*g2i)-clight)
          c2i=c2+eni
          anormi=c2i/sqrt(c2i*c2i+c2*g2i)
          igb0=indg(igb)
          ia=igbs(1,jgb0)-igbs(1,igb0)
          ib=igbs(2,jgb0)-igbs(2,igb0)
          ic=igbs(3,jgb0)-igbs(3,igb0)
          ind=indplw(ia,ib,ic)
          const=c2/c2i/c2j
          const1=clight/c2i
          const2=clight/c2j
          scal=ddot(3,gki,1,gkj,1)
          call cross(cr,gki,gkj)
          ann=anormi*anormj
          amult=gi*gj
          do jp=1,2
            jh=(jp-1)*nbndt+jgb
            do ipp=1,2
              ih=(ipp-1)*nbndt+igb
c     &&&&& Begin  IV-40-24 &&&&&&&&&&&&&&&&&&&
              if(ipp.eq.1.and.jp.eq.1) then
                pr=scal
                pii=-cr(3)
              else if(ipp.eq.1.and.jp.eq.2) then
                pr=-cr(2)
                pii=cr(1)
              else if(ipp.eq.2.and.jp.eq.1) then
                pr=cr(2)
                pii=cr(1)
              else if(ipp.eq.2.and.jp.eq.2) then
                pr=scal
                pii=cr(3)
              endif
              rel0r=const*pr
              rel0i=const*pii
c     &&&&& End  IV-40-24 &&&&&&&&&&&&&&&&&&&
              if(ipp.eq.jp) then
                relr=ann*(1.d0+rel0r)
              else
                relr=ann*rel0r
              endif
              reli=ann*rel0i
              rel(ih,jh)=dcmplx(relr,reli)
c     &&&&& End  IV-40-25 &&&&&&&&&&&&&&&&&&&
c ----------- Symmetrization -------------------------------
              enij=0.5d0*(eni+enj)	            
              xr0=enij*rel0r
              xi0=enij*rel0i
              if(ipp.eq.jp) then
                xr0=xr0+0.5d0*c2*(g2i/c2i+g2j/c2j)
              endif
              rel1(ih,jh)=ann*dcmplx(xr0,xi0)
            enddo  !!! over ip
          enddo  !!! over jp
        enddo  !!! over igb
      enddo  !!! over jgb
      end